Quản lý thức ăn trong cửa hàng là một công việc quan trọng để đảm bảo sản phẩm luôn được quản lý và bán ra một cách an toàn và hiệu quả. Các nhiệm vụ cơ bản bao gồm:

1. **Quản lý tồn kho:** Theo dõi số lượng thực phẩm và nguyên liệu để đảm bảo không bị thiếu hụt hoặc lãng phí.
   
2. **Bảo quản thực phẩm:** Đảm bảo các sản phẩm được bảo quản đúng cách để tránh thất thoát và bảo đảm an toàn thực phẩm.

3. **Đặt hàng và cung ứng:** Xác định nhu cầu đặt hàng và tương tác với các nhà cung cấp để đảm bảo cửa hàng luôn có đủ nguyên liệu.

4. **Tuân thủ quy định vệ sinh:** Đảm bảo tuân thủ các quy định vệ sinh thực phẩm để đảm bảo an toàn cho khách hàng và nhân viên.

5. **Quản lý chất lượng:** Kiểm tra chất lượng thực phẩm đầu vào và đầu ra để đảm bảo sản phẩm đạt tiêu chuẩn.

6. **Phân loại và trưng bày sản phẩm:** Sắp xếp sản phẩm một cách hợp lý để thu hút khách hàng và dễ dàng quản lý.

7. **Giám sát hạn sử dụng:** Theo dõi và quản lý hạn sử dụng của các sản phẩm để tránh bán hàng hết hạn.

Việc quản lý thức ăn hiệu quả không chỉ giúp cửa hàng hoạt động trơn tru mà còn đảm bảo an toàn thực phẩm và sự hài lòng của khách hàng.
Đây là một ví dụ đơn giản về mã code Python để quản lý thức ăn trong cửa hàng. Mã này sẽ giúp bạn nhập thông tin về các mặt hàng thực phẩm và hiển thị danh sách các mặt hàng đó.

```python
class FoodItem:
    def __init__(self, name, price, quantity):
        self.name = name
        self.price = price
        self.quantity = quantity
    
    def display(self):
        print(f"Name: {self.name}, Price: {self.price}, Quantity: {self.quantity}")

class Store:
    def __init__(self):
        self.inventory = []
    
    def add_food_item(self, food_item):
        self.inventory.append(food_item)
    
    def display_inventory(self):
        print("Store Inventory:")
        for item in self.inventory:
            item.display()
    
    def find_item(self, name):
        for item in self.inventory:
            if item.name.lower() == name.lower():
                return item
        return None

# Sử dụng ví dụ
if __name__ == "__main__":
    store = Store()

    # Thêm một số mặt hàng vào cửa hàng
    store.add_food_item(FoodItem("Bánh mì", 15000, 10))
    store.add_food_item(FoodItem("Bánh bao", 10000, 15))
    store.add_food_item(FoodItem("Trà đá", 5000, 20))

    # Hiển thị danh sách các mặt hàng trong kho
    store.display_inventory()

    # Tìm kiếm một mặt hàng theo tên
    item_name = "Bánh bao"
    found_item = store.find_item(item_name)
    if found_item:
        print(f"Found {item_name}:")
        found_item.display()
    else:
        print(f"{item_name} not found in the inventory.")
```

Trong ví dụ này:
- `FoodItem` là lớp đại diện cho các mặt hàng thực phẩm với các thuộc tính như tên, giá và số lượng.
- `Store` là lớp đại diện cho cửa hàng, có chức năng thêm mặt hàng vào kho, hiển thị danh sách kho hàng, và tìm kiếm mặt hàng theo tên.
- Trong hàm `__main__`, một cửa hàng được tạo và một số mặt hàng được thêm vào. Sau đó, danh sách các mặt hàng trong kho được hiển thị và tìm kiếm một mặt hàng theo tên được thực hiện.

